<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="goal.mapper.GroupMapper">
	<resultMap type="goal.vo.GroupVO" id="groupVO">
		<id property="gno" column="gno"/>
		<id property="uno" column="uno"/>
		<id property="g_name" column="g_name"/>
		<id property="g_date" column="g_date"/>
		<id property="g_intro" column="g_intro"/>
		<id property="g_cate" column="g_cate"/>
		<id property="g_open" column="g_open"/>
		<id property="file_check" column="file_check"/>
		<id property="bgi_check" column="bgi_check"/>
		<collection column="gno" property="groupUser" javaType="List" ofType="goal.vo.GroupUserVO" select="getGroupUser"/>
		<collection column="{gno=gno, uno=uno}" property="userFileCheck" javaType="String" ofType="String" select="checkUserProfile"/>
		<collection column="gno" property="userCount" javaType="int" ofType="int" select="countUser"/>
		<collection column="g_name" property="boardCount" javaType="int" ofType="int" select="countBoard"/>
	</resultMap>
	<resultMap type="goal.vo.GroupJoinVO" id="groupJoinVO">
		<id property="gno" column="gno"/>
		<id property="join_msg" column="join_msg"/>
		<id property="join_date" column="join_date"/>
		<id property="uno" column="uno"/>
		<collection column="uno" property="userFileCheck" javaType="String" ofType="String" select="checkJoinProfile"/>
		<collection column="uno" property="userId" javaType="String" ofType="String" select="getUserId"/>
	</resultMap>
	<resultMap type="goal.vo.GroupDataVO" id="groupDataVO">
		<id property="mno" column="mno"/>
		<id property="gno" column="gno"/>
		<id property="dno" column="dno"/>
		<id property="uno" column="uno"/>
		<id property="data_cnt" column="data_cnt"/>
		<id property="data_regDate" column="data_regDate"/>
	</resultMap>
	<select id="getGroupUser" resultType="goal.vo.GroupUserVO">
		SELECT * FROM gk_group_user where gno=#{gno}
	</select>
	<select id="checkUserProfile" parameterType="java.util.Map" resultType="String">
		select userFileCheck from gk_allgroup a, gk_user u, gk_group_user g where a.gno=g.gno and g.uno=u.uno and a.gno=#{gno} and g.uno=#{uno}
	</select>
	<select id="checkJoinProfile" parameterType="int" resultType="String">
		select userFileCheck from gk_user where uno=#{uno}
	</select>
	<select id="countUser" resultType="int">
		SELECT count(*) FROM gk_group_user where gno=#{gno}
	</select>
	<select id="countBoard" resultType="int">
		SELECT count(*) FROM gk_board where bo_group=#{g_name}
	</select>
	<select id="selectGroupList" parameterType="goal.vo.UserVO" resultMap="groupVO">
		<![CDATA[
			SELECT * FROM GK_ALLGROUP WHERE UNO=#{uno} ORDER BY gno DESC
		]]>
	</select>
	<select id="findGnobyName" parameterType="String" resultType="int">
		<![CDATA[
			SELECT gno FROM GK_ALLGROUP WHERE g_name=#{g_name}
		]]>
	</select>
	<select id="allList" resultMap="groupVO">
		SELECT * FROM GK_ALLGROUP where g_open='Y' order by g_date desc
	</select>
	<select id="recentGroup" resultMap="groupVO">
		<![CDATA[
		SELECT ROWNUM, GNO FROM (SELECT * FROM GK_ALLGROUP ORDER BY GNO DESC)WHERE ROWNUM <= 1
		]]>
	</select>
	<select id="selectGroup" parameterType="int" resultMap="groupVO">
		select * from gk_allgroup where gno=#{gno}
	</select>
	<select id="selectSearchList" parameterType="String" resultMap="groupVO">
		<![CDATA[
			SELECT * FROM GK_ALLGROUP WHERE (G_NAME like '%' || #{word} || '%' or G_CATE like '%' || #{word} || '%' or G_INTRO like '%' || #{word} || '%') and g_open = 'Y'
		]]>
	</select>
	<insert id="createGroup" parameterType="goal.vo.GroupVO">
		<selectKey keyProperty="gno" resultType="int" order="BEFORE">
			select GK_ALLGROUP_SEQ.nextval from dual
		</selectKey>
		insert into
		GK_ALLGROUP(gno, uno, g_name, g_intro, g_date, g_cate,
		g_open, file_check, bgi_check) values
		(GK_ALLGROUP_SEQ.currval, #{uno}, #{g_name},
		#{g_intro}, sysdate, #{g_cate}, #{g_open}, #{file_check}, 'N'
		)
	</insert>
	<update id="updateBgiCheck" parameterType="int">
		update gk_allgroup
		set bgi_check='Y' where gno=#{gno}
	</update>
	<insert id="insertGroupFile" parameterType="goal.vo.GroupFileVO">
		insert into
		GK_GROUP_PROFILE(g_fid, g_filename, g_filepath, gno) values
		(GK_GROUPFILE_SEQ.nextval, #{g_filename}, #{g_filepath}, #{g_gno})
	</insert>
	<insert id="insertGroupJoin" parameterType="goal.vo.GroupJoinVO">
		insert into GK_GROUP_JOIN(gno, join_msg, join_date, uno) values
		(#{gno}, #{join_msg}, sysdate, #{uno})
	</insert>
	<select id="selectGroupJoin" parameterType="int" resultMap="groupJoinVO">
		select * from gk_group_join where gno=#{gno}
	</select>
	<select id="getUserId" parameterType="int" resultType="String">
		select userId from gk_user where uno=#{uno}
	</select>
	<select id="selectGroupJoinUno" parameterType="goal.vo.GroupJoinVO" resultMap="groupJoinVO">
		select * from gk_group_join where uno=#{uno} and gno=#{gno}
	</select>
	<select id="selectGroupJoinbyGno" parameterType="int" resultMap="groupJoinVO">
		select * from gk_group_join where uno=#{uno} and gno=#{gno}
	</select>
	<delete id="removeGroupJoin" parameterType="goal.vo.GroupJoinVO">
		<![CDATA[
			delete gk_group_join WHERE GNO=#{gno} and uno=#{uno}
		]]> 
	</delete>
	<delete id="removeGroup" parameterType="int">
		<![CDATA[
			delete GK_ALLGROUP WHERE GNO=#{gno}
		]]> 
	</delete>
	<insert id="insertGroupData" parameterType="goal.vo.GroupDataVO">
		insert into GK_DATA(mno, dno, uno, data_cnt, data_regdate) values
		(gk_data_seq.nextval, #{dno}, #{uno}, #{data_cnt}, sysdate)
	</insert>
	<select id="findDatabyDno" parameterType="goal.vo.GroupDataVO" resultMap="groupUserGoal">
		select goal_name, userId, goal_allcnt, data_cnt, data_regdate from gk_data d, gk_goal g, gk_user u where d.uno=u.uno and g.dno=d.dno and d.dno=#{dno}
	</select>
	<select id="countDatabyUno" parameterType="goal.vo.GroupDataVO" resultType="goal.vo.GroupDataVO">
		select * from gk_data where uno=#{uno} and dno=#{dno} and TO_CHAR(data_regdate, 'YY/MM/DD') = TO_CHAR(SYSDATE, 'YY/MM/DD')
	</select>
	<select id="countDatabyGno" parameterType="int" resultType="int">
		select count(*) from gk_data d, gk_goal g where d.dno=g.dno and g.gno=#{gno}
	</select>
	 <select id="recGroup" resultMap="groupVO">
      select * from (select * from gk_allgroup order by dbms_random.value) where rownum = 1
   </select>
	<select id="findGroupbyUno" parameterType="int" resultMap="groupVO">
		select a.GNO, a.UNO, a.G_NAME, a.G_DATE, a.G_INTRO, a.G_CATE, a.G_OPEN, a.FILE_CHECK, a.BGI_CHECK from gk_allgroup a, gk_group_user u where a.gno=u.gno and u.uno=#{uno}
	</select>
</mapper>